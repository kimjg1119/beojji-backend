generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  email     String @unique
  studentId String @unique
  username  String
  password  String
  role      String @default("user")

  course     Course[]     @relation("UserClass")
  submission Submission[]
  activity   Activity[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id Int @id @default(autoincrement())

  courseId    String
  name        String
  term        String
  description String
  link        String?
  user        User[]          @relation("UserClass")
  courseProblem     CourseProblem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Problem {
  id Int @id @default(autoincrement())

  title       String
  description String
  link        String
  readme      String?
  package     String?
  course      CourseProblem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CourseProblem {
  id Int @id @default(autoincrement())

  courseId   Int
  problemId  Int
  dueDate    DateTime
  course     Course       @relation(fields: [courseId], references: [id])
  problem    Problem      @relation(fields: [problemId], references: [id])
  submission Submission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([courseId, problemId])
  @@map("CourseProblem")
}

model Submission {
  id Int @id @default(autoincrement())

  userId          Int
  courseProblemId Int
  code            String
  status          String
  detail          String?
  score           Int           @default(0)
  user            User          @relation(fields: [userId], references: [id])
  courseProblem   CourseProblem @relation(fields: [courseProblemId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, courseProblemId])
}

model Activity {
  id Int @id @default(autoincrement())

  userId  Int
  type    String
  content String
  user    User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}
